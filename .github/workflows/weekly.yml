name: Weekly Content Generation and Deploy

on:
  schedule:
    # Draait elke maandag om 08:00 UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:
    inputs:
      skip_content_generation:
        description: 'Sla de content generatie stappen over.'
        required: false
        type: boolean
        default: false
      skip_website_deploy:
        description: 'Sla de publicatie naar GitHub Pages over.'
        required: false
        type: boolean
        default: false
      skip_social_publish:
        description: 'Sla de publicatie naar sociale media over.'
        required: false
        type: boolean
        default: false

jobs:
  # JOB 1: Genereer alle content en data bestanden
  generate-content:
    runs-on: ubuntu-latest
    permissions:
      # We hebben alleen nog 'contents: write' nodig om bestanden te committen.
      contents: write 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # VERWIJDERD: De hele 'Authenticate to Google Cloud' stap is weg.

      - name: Run Content Generation Pipeline
        id: generate
        env:
          # AI Provider Keys
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          
          # Social Media Keys
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          MASTODON_API_BASE_URL: ${{ secrets.MASTODON_API_BASE_URL }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          python -m src.run_pipeline \
            ${{ github.event.inputs.skip_content_generation == 'true' && '--skip-content-generation' || '' }} \
            --skip-blogger-publish \
            ${{ github.event.inputs.skip_social_publish == 'true' && '--skip-social-publish' || '' }}

      - name: Commit and Push Generated Content
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add content/ raw.json curated.json social_posts.json longread_outline.json
          # Commit alleen als er wijzigingen zijn
          if ! git diff --staged --quiet; then
            git commit -m "feat(content): Add generated content from workflow run"
            git push
          else
            echo "No changes to commit."
          fi
      
      - name: Upload generated content as artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-site-source
          path: |
            content/
            raw.json
            curated.json
            social_posts.json
            longread_outline.json
            # Zorg ervoor dat de configuratiebestanden en mappen van je SSG hier ook staan
            hugo.toml
            themes/
            static/

  # JOB 2: Bouw en publiceer de website naar GitHub Pages
  deploy-website:
    runs-on: ubuntu-latest
    needs: generate-content 
    if: ${{ github.event.inputs.skip_website_deploy != 'true' }}
    permissions:
      contents: write 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Download generated content artifact
        uses: actions/download-artifact@v4
        with:
          name: generated-site-source
          path: ./

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build website
        run: hugo --minify
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public 
          commit_message: "docs(deploy): Deploy latest content to GitHub Pages"
name: Weekly Content Generation and Deploy

# --- PERMISSIES VOOR DE HELE WORKFLOW ---
permissions:
  contents: write  # Toestemming om content te committen
  pages: write     # Toestemming om naar GitHub Pages te schrijven
  id-token: write  # Toestemming voor authenticatie met de deploy-actie

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 6 * * 1'
  workflow_dispatch:
    inputs:
      skip_content_generation:
        description: 'Sla de content generatie stappen over.'
        required: false
        type: boolean
        default: false

jobs:
  # JOB 1: Genereer alle content en data bestanden
  generate-content:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_content_generation != 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run Content Generation Pipeline
        env:
          SITE_BASE_URL: "https://profdrkdc.github.io/Vegan-BioTech-Report/"
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: python3 -m src.run_pipeline
      - name: Commit and Push Generated Content
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add archive/ content/ raw.json curated.json social_posts.json longread_outline.json published_post_url.txt
          if ! git diff --staged --quiet; then
            git commit -m "feat(content): Add generated content from workflow run"
            git push
          fi

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: generate-content
    if: always()
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          ref: main

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Hugo
        run: hugo --cleanDestinationDir --minify --baseURL ${{ steps.pages.outputs.base_url }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4